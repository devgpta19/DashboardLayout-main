@use "../../Sass/style.scss" as style;
@use "../../Sass/mixin" as m;
@use "sass:math";

$card-width: calc(
  (
      #{style.$screen-width} - #{style.$CloseSidebar-width} -
        (10 * #{style.$marginX}) - (2 * #{style.$paddingX})
    ) / 5
);
$card-height: calc(#{$card-width}/#{style.$ratio});

$mini-cardWidth: 100px;
$calculated-width: calc(
  (#{style.$screen-width} - (10 * #{style.$marginX}) - (2 * #{style.$paddingX})) /
    5
);
$mini-cardHeight: calc(#{$mini-cardWidth}/#{style.$ratio});

.Box {
  margin-top: style.$marginX;
  padding: style.$paddingX;
  background-color: style.$theme-color;
  height: 100%;
  display: flex;
  flex-direction: row;
  overflow-x: auto;
  
  .Card {
    flex-grow: 1;
    flex-shrink: 0;
    margin: 0 #{style.$marginX};
    margin-top: style.$marginX;
    background-color: aqua;
    min-height: $mini-cardHeight;
    min-width: $mini-cardWidth;
    border-radius: #{style.$border};
    border-bottom-left-radius: #{style.$border};
    border-bottom-righg-radius: #{style.$border};
  }

  @include m.breakpoint("medium") {
    height: 100%;
    width: 100%;
    background-color: style.$theme-color;
    padding: 0 style.$paddingX;
    margin: 0;
    margin-top: style.$marginX;
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;

    .Card {
      background-color: aqua;
      width: #{$card-width};
      height: #{$card-height};
      padding: style.$paddingY style.$paddingX;
      border-radius: #{style.$border};
      border-bottom-left-radius: #{style.$border};
      border-bottom-right-radius: #{style.$border};
    }
  }
}
